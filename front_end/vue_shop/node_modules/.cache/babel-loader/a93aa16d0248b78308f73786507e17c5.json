{"remainingRequest":"C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\src\\components\\Login.vue","mtime":1592146185776},{"path":"C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\12696\\Desktop\\课设三\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\12696\\\\Desktop\\\\\\u8BFE\\u8BBE\\u4E09\\\\20-21vue\\u7535\\u5546\\\\3.vue-\\u9879\\u76EE\\u5B9E\\u6218day1\\\\code\\\\vue_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 这是登录表单的数据绑定对象\n      loginForm: {\n        username: 'swing',\n        password: '123456'\n      },\n      // 这是表单的验证规则对象\n      loginFormRules: {\n        // 验证用户名是否合法\n        username: [{\n          required: true,\n          message: '请输入登录名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        // 验证密码是否合法\n        password: [{\n          required: true,\n          message: '请输入登录密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 点击重置按钮，重置登录表单\n    resetLoginForm: function resetLoginForm() {\n      // console.log(this);\n      this.$refs.loginFormRef.resetFields();\n    },\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(valid) {\n          var _ref2, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (valid) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  _context.next = 4;\n                  return _this.$http.get('/restaurant/info');\n\n                case 4:\n                  _ref2 = _context.sent;\n                  res = _ref2.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('登录失败！'));\n\n                case 8:\n                  _this.$message.success('登录成功'); // // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\n                  // //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\n                  // //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\n                  // window.sessionStorage.setItem('token', res.data.token)\n                  // // // 2. 通过编程式导航跳转到后台主页，路由地址是 /home\n\n\n                  _this.$router.push('/home');\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAFA;AAMA;AACA,MAAA,cAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAFA;AAMA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AAPA;AAPA,KAAA;AAoBA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,cAFA,4BAEA;AACA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,WAAA;AACA,KALA;AAMA,IAAA,KANA,mBAMA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAA,iBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,yBAWA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,kBAAA,CAXA;;AAAA;AAAA;AAWA,kBAAA,GAXA,SAWA,IAXA;;AAAA,wBAYA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAZA;AAAA;AAAA;AAAA;;AAAA,mDAYA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAZA;;AAAA;AAaA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAbA,CAcA;AACA;AACA;AACA;AACA;;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAqBA;AA5BA;AAvBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"login_container\">\r\n    <div class=\"login_box\">\r\n      <!-- 头像区域 -->\r\n      <div class=\"avatar_box\">\r\n        <img src=\"../assets/logo.png\" alt=\"\">\r\n      </div>\r\n      <!-- 登录表单区域 -->\r\n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\" label-width=\"0px\" class=\"login_form\">\r\n        <!-- 用户名 -->\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-user\"></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" prefix-icon=\"iconfont icon-3702mima\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 这是登录表单的数据绑定对象\r\n      loginForm: {\r\n        username: 'swing',\r\n        password: '123456'\r\n      },\r\n      // 这是表单的验证规则对象\r\n      loginFormRules: {\r\n        // 验证用户名是否合法\r\n        username: [\r\n          { required: true, message: '请输入登录名称', trigger: 'blur' },\r\n          { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n        ],\r\n        // 验证密码是否合法\r\n        password: [\r\n          { required: true, message: '请输入登录密码', trigger: 'blur' },\r\n          { min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 点击重置按钮，重置登录表单\r\n    resetLoginForm() {\r\n      // console.log(this);\r\n      this.$refs.loginFormRef.resetFields()\r\n    },\r\n    login() {\r\n      this.$refs.loginFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        \r\n          // 传入API名以及请求参数对象\r\n        // this.$jsonp('http://localhost:8080/user/login',\r\n        // {account:'swing',password:'123456'}).then((res)=>{\r\n        //   console.log(res.data)\r\n//         this.$jsonp('http://localhost:8080/user/test').then((res)=>{\r\n//           console.log(res.data)\r\n// })\r\n        // const { data: res } = await this.$http.post('/user/login', {\"account\":\"swing\",\"password\":\"123456\"})\r\n        const { data: res } = await this.$http.get('/restaurant/info')\r\n        if (res.meta.status !== 200) return this.$message.error('登录失败！')\r\n        this.$message.success('登录成功')\r\n        // // 1. 将登录成功之后的 token，保存到客户端的 sessionStorage 中\r\n        // //   1.1 项目中出了登录之外的其他API接口，必须在登录之后才能访问\r\n        // //   1.2 token 只应在当前网站打开期间生效，所以将 token 保存在 sessionStorage 中\r\n        // window.sessionStorage.setItem('token', res.data.token)\r\n        // // // 2. 通过编程式导航跳转到后台主页，路由地址是 /home\r\n        this.$router.push('/home')\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login_container {\r\n  background-color: #2b4b6b;\r\n  height: 100%;\r\n}\r\n\r\n.login_box {\r\n  width: 450px;\r\n  height: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  .avatar_box {\r\n    height: 130px;\r\n    width: 130px;\r\n    border: 1px solid #eee;\r\n    border-radius: 50%;\r\n    padding: 10px;\r\n    box-shadow: 0 0 10px #ddd;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #fff;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 50%;\r\n      background-color: #eee;\r\n    }\r\n  }\r\n}\r\n\r\n.login_form {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.btns {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}